# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: VMSS-Linux-PROD

# Run pipeline tasks in container using FA standard build image
container:
  image: ssppaps1arpscr1.azurecr.io/ubuntu1804-build-agent
  endpoint: DevOps-ACR-PROD

  
variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotnetSdkVersion: '6.x'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 6.0.0'
  inputs:
    versionSpec: 6.0.0

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 6.x'
  inputs:
    version: 6.x

- task: NuGetAuthenticate@0

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'Solutions/TransactionsPortal/ReportByTransactionType/Report.TransactionType.Service.Lambda/Report.TransactionType.Service.Lambda.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda /p:PublishReadyToRun=true --self-contained false -c Release -r linux-arm64 '
    modifyOutputPath: true
    zipAfterPublish: false

- task: DeleteFiles@1
  displayName: 'Delete DLLs that are in Lambda Layer'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda/Report.TransactionType.Service.Lambda'
    Contents: |
      **.pdb

- task: CopyFiles@2
  displayName: 'Copy aws login bat file'
  inputs:
    SourceFolder: 'Solutions/TransactionsPortal/Deployment'
    contents: 'aws-profile-setup-and-login.bat'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda'   

- task: CopyFiles@2
  displayName: 'Copy lambda config file'
  inputs:
    SourceFolder: 'Solutions/TransactionsPortal/ReportByTransactionType/Report.TransactionType.Service.Lambda'
    contents: 'aws-lambda-tools-defaults.json'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'      

- task: CopyFiles@2
  displayName: 'Copy Postman Scripts'
  inputs:
    SourceFolder: 'Solutions/TransactionsPortal/ReportByTransactionType/Postman'
    contents: |
      TransactionTypeReportAPI.postman_collection.json
      TransactionTypeReportAPI_SB.postman_environment.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda'     

- task: ArchiveFiles@2
  displayName: 'Archive $(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda/Report.TransactionType.Service.Lambda'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda/Report.TransactionType.Service.Lambda'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/Report.TransactionType.Service.Lambda_$(Build.BuildNumber).zip'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ReportByTransactionTypeLambda'
    ArtifactName: 'Code'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Package'
    publishLocation: 'Container'    

